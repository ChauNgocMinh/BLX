@page "/vao_thi/{userId}"
@using System.Timers
@using BLX.Models;
@using Microsoft.EntityFrameworkCore;
@implements IDisposable
@inject HttpClient Http
@inject BLXContext _context
@inject NavigationManager NavigationManager
@inject IHttpContextAccessor HttpContextAccessor

<style>
    .main {
        height: 100vh;
        width: 100vw;
        display: flex;
        padding: 10px;
        box-sizing: border-box;
    }

    .box-left {
        display: flex;
        flex-direction: column;
        height: 100%;
        padding-right: 10px;
        box-sizing: border-box;
    }

    .img {
        flex: 1;
        background-color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 10px;
    }

    .img img {
        max-height: 80vh;
        width: auto;
    }

    .custom-box {
        flex-shrink: 0;
        border-radius: 15px;
        box-shadow: 0px 0px 10px rgb(0 0 0 / 63%);
        background-color: #fff; 
    }

    .info-user {
        padding: 1rem;
    }

    .question-box {
        display: flex;
        flex-direction: column;
        gap: 10px;
        height: 100%;
    }

    .radio-group p, input {
        font-size: 18px
    }

    .radio-group .form-check{
        padding: 0 5px;
        max-width: 20px;
    }

    .question-item {
        border-radius: 15px;
        box-shadow: 0px 0px 10px rgb(0 0 0 / 63%);
        background-color: #fff;
        padding: 5px;
        height: auto;
        margin: 10px 10px 0 10px;
    }

    .time-box{
        background-color: #5b9bd6;
        border-radius: 15px 15px 0 0;
        font-size: 35px;
        font-weight: bold;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    @@media (min-width: 1366px) {
        .question-item {
            margin: 10px 5px 0 5px;
        }
        .radio-group .form-check{
            padding: 0;
        }
    }
</style>
<div class="row main justify-content-center">
    <div class="col-10 box-left">
        <div class="img custom-box">
            <img src="@urlImage" alt="Example Image" />
        </div>
        <div class="custom-box info-user d-flex justify-content-between align-items-center">
            <div>
                <div style="font-weight: bold;">Họ tên: @user.Name</div>
                <div class="mt-2" style="font-weight: bold;">
                    Ngày sinh:@if (user.NamSinh != null)
                    {
                        @DateTime.Parse(user.NamSinh.ToString()).ToString("dd/MM/yyyy")
                    }
                </div>
                <div class="mt-2" style="font-weight: bold;">CCCD/CMT: @user.Cccd</div>
            </div>
            <div>
                <button @onclick="Submit" type="button" style="font-size: 20px; padding: 10px 20px;" class="mt-2 btn btn-primary btn-block check-info">Nộp bài</button>
            </div>
        </div>
    </div>
    <div class="col-2 custom-box question-box p-0">
        <div class="time-box">
            @timeString
        </div>
        <div style="overflow-y: auto" class="row m-0 justify-content-center">
            @if (userQuestions != null)
            {
                @foreach (var item in userQuestions)
                {
                    <button @onclick="() => ChangeImage(item.IdQuestionNavigation.Id)" class="question-item col-11 d-flex align-content-center">
                        <label style="min-width: 65px;">
                            Câu @item.Number:
                        </label>
                        <div class="radio-group d-flex justify-content-evenly w-100">

                            @for (int i = 1; i <= item.IdQuestionNavigation.NumberAnswers; i++)
                            {
                                var answerValue = i; 
                                <div class="form-check">
                                    <label class="form-check-label p-0 d-flex justify-content-center" for="option@answerValue_@item.IdQuestionNavigation.Id">
                                        @answerValue
                                    </label>
                                    <input class="form-check-input m-0" type="radio"
                                           name="options_@item.IdQuestionNavigation.Id"
                                           id="option@answerValue_@item.IdQuestionNavigation.Id"
                                           value="@answerValue"
                                    @onchange="() => OnRadioChange(item.Number, answerValue)">
                                </div>
                            }
                        </div>
                    </button>
                }
            }
        </div>
    </div>
</div>

<MessageBox Title="Thông báo" Message="Bạn có chắc chắn muốn nộp bài?" Show="@showYesNoMessageBox" OnYes="HandleYesClick" OnNo="HandleNoClick" />
<MessageBox Title="Thông báo" Message="@Message" Show="@showYesNoMessageBox2" OnOk="HandleOkClick1" />
<MessageBox Title="Thông báo" Message="Đã hết thời gian làm bài!" Show="@showYesNoMessageBox1" OnOk="HandleOkClick" />

@code {
    [Parameter]
    public string UserId { get; set; }
    public User user = new User();
    private Timer timer;
    private DateTime endTime;
    private string timeString;
    public string urlImage = "";
    public string Message = "";
    UserQuestion userQuestion = new UserQuestion();
    Question id_monhoc_01 = new Question();
    Question id_monhoc_02 = new Question();
    List<Question> id_monhoc_03 = new List<Question>();
    Question id_monhoc_04 = new Question();
    Question id_monhoc_05;
    Question id_monhoc_06 = new Question();
    List<Question> id_monhoc_07 = new List<Question>();
    Question id_monhoc_08 = new Question();
    List<Question> id_monhoc_09 = new List<Question>();
    List<Question> id_monhoc_10 = new List<Question>();
    List<UserQuestion> userQuestions;
    private Dictionary<int, int?> selectedAnswers = new Dictionary<int, int?>();
    int Numbers = 1;
    private bool shouldNavigate = false;
    private string navigationError = null;
    protected override void OnInitialized()
    {
        user = _context.Users.Include(x => x.Semester).FirstOrDefault(x => x.Id == Guid.Parse(UserId));
        if(user.Status == false)
        {
            if (user.Semester.Rank == "B11")
            {
                id_monhoc_01 = _context.Questions
                    .Include(x => x.TypeNavigation)
                    .Where(x => x.TypeNavigation.Domain == "id_monhoc_01")
                    .OrderBy(x => Guid.NewGuid())
                    .FirstOrDefault();
                urlImage = "./img/" + id_monhoc_01.TypeNavigation.Domain + "/" + id_monhoc_01.Name + "";
                userQuestion.Id= Guid.NewGuid();
                userQuestion.IdUser = Guid.Parse(UserId);
                userQuestion.Status = false;
                userQuestion.IdQuestion = id_monhoc_01.Id;
                userQuestion.Number = Numbers;  Numbers++;  _context.Add(userQuestion);
                _context.SaveChanges();

                id_monhoc_02 = _context.Questions
                    .Include(x => x.TypeNavigation)
                    .Where(x => x.TypeNavigation.Domain == "id_monhoc_02")
                    .OrderBy(x => Guid.NewGuid())
                    .FirstOrDefault();
                userQuestion.Id = Guid.NewGuid();
                userQuestion.IdUser = Guid.Parse(UserId);
                userQuestion.Status = false;
                userQuestion.IdQuestion = id_monhoc_02.Id;
                userQuestion.Number = Numbers;  Numbers++;  _context.Add(userQuestion);
                _context.SaveChanges();

                id_monhoc_03 = _context.Questions
                    .Include(x => x.TypeNavigation)
                    .Where(x => x.TypeNavigation.Domain == "id_monhoc_03")
                    .OrderBy(x => Guid.NewGuid())
                    .Take(6)
                    .ToList();
                foreach (var item in id_monhoc_03)
                {
                    userQuestion.Id = Guid.NewGuid();
                    userQuestion.IdUser = Guid.Parse(UserId);
                    userQuestion.Status = false;
                    userQuestion.IdQuestion = item.Id;
                    userQuestion.Number = Numbers;  Numbers++;  _context.Add(userQuestion);
                    _context.SaveChanges();
                }

                id_monhoc_04 = _context.Questions
                    .Include(x => x.TypeNavigation)
                    .Where(x => x.TypeNavigation.Domain == "id_monhoc_04")
                    .OrderBy(x => Guid.NewGuid())
                    .FirstOrDefault();
                userQuestion.Id = Guid.NewGuid();
                userQuestion.IdUser = Guid.Parse(UserId);
                userQuestion.Status = false;
                userQuestion.IdQuestion = id_monhoc_04.Id;
                userQuestion.Number = Numbers;  Numbers++;  _context.Add(userQuestion);
                _context.SaveChanges();

                id_monhoc_06 = _context.Questions
                    .Include(x => x.TypeNavigation)
                    .Where(x => x.TypeNavigation.Domain == "id_monhoc_06")
                    .OrderBy(x => Guid.NewGuid())
                    .FirstOrDefault();
                userQuestion.Id = Guid.NewGuid();
                userQuestion.IdUser = Guid.Parse(UserId);
                userQuestion.Status = false;
                userQuestion.IdQuestion = id_monhoc_06.Id;
                userQuestion.Number = Numbers;  Numbers++;  _context.Add(userQuestion);
                _context.SaveChanges();

                id_monhoc_07 = _context.Questions
                    .Include(x => x.TypeNavigation)
                    .Where(x => x.TypeNavigation.Domain == "id_monhoc_07")
                    .OrderBy(x => Guid.NewGuid())
                    .Take(1)
                    .ToList();
                foreach (var item in id_monhoc_07)
                {
                    userQuestion.Id = Guid.NewGuid();
                    userQuestion.IdUser = Guid.Parse(UserId);
                    userQuestion.Status = false;
                    userQuestion.IdQuestion = item.Id;
                    userQuestion.Number = Numbers;  Numbers++;  _context.Add(userQuestion);
                    _context.SaveChanges();
                }

                id_monhoc_08 = _context.Questions
                    .Include(x => x.TypeNavigation)
                    .Where(x => x.TypeNavigation.Domain == "id_monhoc_08")
                    .OrderBy(x => Guid.NewGuid())
                    .FirstOrDefault();
                userQuestion.Id = Guid.NewGuid();
                userQuestion.IdUser = Guid.Parse(UserId);
                userQuestion.Status = false;
                userQuestion.IdQuestion = id_monhoc_08.Id;
                userQuestion.Number = Numbers;  Numbers++;  _context.Add(userQuestion);
                _context.SaveChanges();

                id_monhoc_09 = _context.Questions
                    .Include(x => x.TypeNavigation)
                    .Where(x => x.TypeNavigation.Domain == "id_monhoc_09")
                    .OrderBy(x => Guid.NewGuid())
                    .Take(9)
                    .ToList();
                foreach (var item in id_monhoc_09)
                {
                    userQuestion.Id = Guid.NewGuid();
                    userQuestion.IdUser = Guid.Parse(UserId);
                    userQuestion.Status = false;
                    userQuestion.IdQuestion = item.Id;
                    userQuestion.Number = Numbers;  Numbers++;  _context.Add(userQuestion);
                    _context.SaveChanges();
                }

                id_monhoc_10 = _context.Questions
                    .Include(x => x.TypeNavigation)
                    .Where(x => x.TypeNavigation.Domain == "id_monhoc_10")
                    .OrderBy(x => Guid.NewGuid())
                    .Take(9)
                    .ToList();
                foreach (var item in id_monhoc_10)
                {
                    userQuestion.Id = Guid.NewGuid();
                    userQuestion.IdUser = Guid.Parse(UserId);
                    userQuestion.Status = false;
                    userQuestion.IdQuestion = item.Id;
                    userQuestion.Number = Numbers;  Numbers++;  _context.Add(userQuestion);
                    _context.SaveChanges();
                }

                endTime = DateTime.Now.AddMinutes(20);
                timeString = "20:00";
                timer = new Timer(1000);
                timer.Elapsed += OnTimerElapsed;
                timer.Start();
            }
            if (user.Semester.Rank == "B2")
            {
                id_monhoc_01 = _context.Questions
                    .Include(x => x.TypeNavigation)
                    .Where(x => x.TypeNavigation.Domain == "id_monhoc_01")
                    .OrderBy(x => Guid.NewGuid())
                    .FirstOrDefault();
                urlImage = "./img/" + id_monhoc_01.TypeNavigation.Domain + "/" + id_monhoc_01.Name + "";
                userQuestion.Id = Guid.NewGuid();
                userQuestion.IdUser = Guid.Parse(UserId);
                userQuestion.Status = false;
                userQuestion.IdQuestion = id_monhoc_01.Id;
                userQuestion.Number = Numbers;  Numbers++;  _context.Add(userQuestion);
                _context.SaveChanges();

                id_monhoc_02 = _context.Questions
                    .Include(x => x.TypeNavigation)
                    .Where(x => x.TypeNavigation.Domain == "id_monhoc_02")
                    .OrderBy(x => Guid.NewGuid())
                    .FirstOrDefault();
                userQuestion.Id = Guid.NewGuid();
                userQuestion.IdUser = Guid.Parse(UserId);
                userQuestion.Status = false;
                userQuestion.IdQuestion = id_monhoc_02.Id;
                userQuestion.Number = Numbers;  Numbers++;  _context.Add(userQuestion);
                _context.SaveChanges();

                id_monhoc_03 = _context.Questions
                    .Include(x => x.TypeNavigation)
                    .Where(x => x.TypeNavigation.Domain == "id_monhoc_03")
                    .OrderBy(x => Guid.NewGuid())
                    .Take(7)
                    .ToList();
                foreach (var item in id_monhoc_03)
                {
                    userQuestion.Id = Guid.NewGuid();
                    userQuestion.IdUser = Guid.Parse(UserId);
                    userQuestion.Status = false;
                    userQuestion.IdQuestion = item.Id;
                    userQuestion.Number = Numbers;  Numbers++;  _context.Add(userQuestion);
                    _context.SaveChanges();
                }

                id_monhoc_04 = _context.Questions
                    .Include(x => x.TypeNavigation)
                    .Where(x => x.TypeNavigation.Domain == "id_monhoc_04")
                    .OrderBy(x => Guid.NewGuid())
                    .FirstOrDefault(); 
                userQuestion.Id = Guid.NewGuid();
                userQuestion.IdUser = Guid.Parse(UserId);
                userQuestion.Status = false;
                userQuestion.IdQuestion = id_monhoc_04.Id;
                userQuestion.Number = Numbers;  Numbers++;  _context.Add(userQuestion);
                _context.SaveChanges();

                id_monhoc_05 = _context.Questions
                    .Include(x => x.TypeNavigation)
                    .Where(x => x.TypeNavigation.Domain == "id_monhoc_05")
                    .OrderBy(x => Guid.NewGuid())
                    .FirstOrDefault();
                userQuestion.Id = Guid.NewGuid();
                userQuestion.IdUser = Guid.Parse(UserId);
                userQuestion.Status = false;
                userQuestion.IdQuestion = id_monhoc_05.Id;
                userQuestion.Number = Numbers;  Numbers++;  _context.Add(userQuestion);
                _context.SaveChanges();

                id_monhoc_06 = _context.Questions
                    .Include(x => x.TypeNavigation)
                    .Where(x => x.TypeNavigation.Domain == "id_monhoc_06")
                    .OrderBy(x => Guid.NewGuid())
                    .FirstOrDefault();
                userQuestion.Id = Guid.NewGuid();
                userQuestion.IdUser = Guid.Parse(UserId);
                userQuestion.Status = false;
                userQuestion.IdQuestion = id_monhoc_06.Id;
                userQuestion.Number = Numbers;  Numbers++;  _context.Add(userQuestion);
                _context.SaveChanges();

                id_monhoc_07 = _context.Questions
                   .Include(x => x.TypeNavigation)
                   .Where(x => x.TypeNavigation.Domain == "id_monhoc_07")
                   .OrderBy(x => Guid.NewGuid())
                   .Take(2)
                   .ToList();
                foreach (var item in id_monhoc_07)
                {
                    userQuestion.Id = Guid.NewGuid();
                    userQuestion.IdUser = Guid.Parse(UserId);
                    userQuestion.Status = false;
                    userQuestion.IdQuestion = item.Id;
                    userQuestion.Number = Numbers;  Numbers++;  _context.Add(userQuestion);
                    _context.SaveChanges();
                }

                id_monhoc_08 = _context.Questions
                    .Include(x => x.TypeNavigation)
                    .Where(x => x.TypeNavigation.Domain == "id_monhoc_08")
                    .OrderBy(x => Guid.NewGuid())
                    .FirstOrDefault();
                userQuestion.Id = Guid.NewGuid();
                userQuestion.IdUser = Guid.Parse(UserId);
                userQuestion.Status = false;
                userQuestion.IdQuestion = id_monhoc_08.Id;
                userQuestion.Number = Numbers;  Numbers++;  _context.Add(userQuestion);
                _context.SaveChanges();

                id_monhoc_09 = _context.Questions
                    .Include(x => x.TypeNavigation)
                    .Where(x => x.TypeNavigation.Domain == "id_monhoc_09")
                    .OrderBy(x => Guid.NewGuid())
                    .Take(10)
                    .ToList();
                foreach (var item in id_monhoc_09)
                {
                    userQuestion.Id = Guid.NewGuid();
                    userQuestion.IdUser = Guid.Parse(UserId);
                    userQuestion.Status = false;
                    userQuestion.IdQuestion = item.Id;
                    userQuestion.Number = Numbers;  Numbers++;  _context.Add(userQuestion);
                    _context.SaveChanges();
                }

                id_monhoc_10 = _context.Questions
                    .Include(x => x.TypeNavigation)
                    .Where(x => x.TypeNavigation.Domain == "id_monhoc_10")
                    .OrderBy(x => Guid.NewGuid())
                    .Take(10)
                    .ToList();
                foreach (var item in id_monhoc_10)
                {
                    userQuestion.Id = Guid.NewGuid();
                    userQuestion.IdUser = Guid.Parse(UserId);
                    userQuestion.Status = false;
                    userQuestion.IdQuestion = item.Id;
                    userQuestion.Number = Numbers;  Numbers++;  _context.Add(userQuestion);
                    _context.SaveChanges();
                }

                endTime = DateTime.Now.AddMinutes(22);
                timeString = "22:00";
                timer = new Timer(1000);
                timer.Elapsed += OnTimerElapsed;
                timer.Start();
            }
            if (user.Semester.Rank == "C")
            {
                id_monhoc_01 = _context.Questions
                    .Include(x => x.TypeNavigation)
                    .Where(x => x.TypeNavigation.Domain == "id_monhoc_01")
                    .OrderBy(x => Guid.NewGuid())
                    .FirstOrDefault();
                urlImage = "./img/" + id_monhoc_01.TypeNavigation.Domain + "/" + id_monhoc_01.Name + "";
                userQuestion.Id = Guid.NewGuid();
                userQuestion.IdUser = Guid.Parse(UserId);
                userQuestion.Status = false;
                userQuestion.IdQuestion = id_monhoc_01.Id;
                userQuestion.Number = Numbers;  Numbers++;  _context.Add(userQuestion);
                _context.SaveChanges();

                id_monhoc_02 = _context.Questions
                    .Include(x => x.TypeNavigation)
                    .Where(x => x.TypeNavigation.Domain == "id_monhoc_02")
                    .OrderBy(x => Guid.NewGuid())
                    .FirstOrDefault();
                userQuestion.Id = Guid.NewGuid();
                userQuestion.IdUser = Guid.Parse(UserId);
                userQuestion.Status = false;
                userQuestion.IdQuestion = id_monhoc_02.Id;
                userQuestion.Number = Numbers;  Numbers++;  _context.Add(userQuestion);
                _context.SaveChanges();

                id_monhoc_03 = _context.Questions
                    .Include(x => x.TypeNavigation)
                    .Where(x => x.TypeNavigation.Domain == "id_monhoc_03")
                    .OrderBy(x => Guid.NewGuid())
                    .Take(7)
                    .ToList();
                foreach (var item in id_monhoc_03)
                {
                    userQuestion.Id = Guid.NewGuid();
                    userQuestion.IdUser = Guid.Parse(UserId);
                    userQuestion.Status = false;
                    userQuestion.IdQuestion = item.Id;
                    userQuestion.Number = Numbers;  Numbers++;  _context.Add(userQuestion);
                    _context.SaveChanges();
                }

                id_monhoc_04 = _context.Questions
                    .Include(x => x.TypeNavigation)
                    .Where(x => x.TypeNavigation.Domain == "id_monhoc_04")
                    .OrderBy(x => Guid.NewGuid())
                    .FirstOrDefault();
                userQuestion.Id = Guid.NewGuid();
                userQuestion.IdUser = Guid.Parse(UserId);
                userQuestion.Status = false;
                userQuestion.IdQuestion = id_monhoc_04.Id;
                userQuestion.Number = Numbers;  Numbers++;  _context.Add(userQuestion);
                _context.SaveChanges();

                id_monhoc_05 = _context.Questions
                    .Include(x => x.TypeNavigation)
                    .Where(x => x.TypeNavigation.Domain == "id_monhoc_05")
                    .OrderBy(x => Guid.NewGuid())
                    .FirstOrDefault();
                userQuestion.Id = Guid.NewGuid();
                userQuestion.IdUser = Guid.Parse(UserId);
                userQuestion.Status = false;
                userQuestion.IdQuestion = id_monhoc_05.Id;
                userQuestion.Number = Numbers;  Numbers++;  _context.Add(userQuestion);
                _context.SaveChanges();

                id_monhoc_06 = _context.Questions
                    .Include(x => x.TypeNavigation)
                    .Where(x => x.TypeNavigation.Domain == "id_monhoc_06")
                    .OrderBy(x => Guid.NewGuid())
                    .FirstOrDefault();
                userQuestion.Id = Guid.NewGuid();
                userQuestion.IdUser = Guid.Parse(UserId);
                userQuestion.Status = false;
                userQuestion.IdQuestion = id_monhoc_06.Id;
                userQuestion.Number = Numbers;  Numbers++;  _context.Add(userQuestion);
                _context.SaveChanges();

                id_monhoc_07 = _context.Questions
                   .Include(x => x.TypeNavigation)
                   .Where(x => x.TypeNavigation.Domain == "id_monhoc_07")
                   .OrderBy(x => Guid.NewGuid())
                   .Take(2)
                   .ToList();
                foreach (var item in id_monhoc_07)
                {
                    userQuestion.Id = Guid.NewGuid();
                    userQuestion.IdUser = Guid.Parse(UserId);
                    userQuestion.Status = false;
                    userQuestion.IdQuestion = item.Id;
                    userQuestion.Number = Numbers;  Numbers++;  _context.Add(userQuestion);
                    _context.SaveChanges();
                }
                id_monhoc_08 = _context.Questions
                    .Include(x => x.TypeNavigation)
                    .Where(x => x.TypeNavigation.Domain == "id_monhoc_08")
                    .OrderBy(x => Guid.NewGuid())
                    .FirstOrDefault();
                userQuestion.Id = Guid.NewGuid();
                userQuestion.IdUser = Guid.Parse(UserId);
                userQuestion.Status = false;
                userQuestion.IdQuestion = id_monhoc_08.Id;
                userQuestion.Number = Numbers;  Numbers++;  _context.Add(userQuestion);
                _context.SaveChanges();

                id_monhoc_09 = _context.Questions
                    .Include(x => x.TypeNavigation)
                    .Where(x => x.TypeNavigation.Domain == "id_monhoc_09")
                    .OrderBy(x => Guid.NewGuid())
                    .Take(14)
                    .ToList();
                foreach (var item in id_monhoc_09)
                {
                    userQuestion.Id = Guid.NewGuid();
                    userQuestion.IdUser = Guid.Parse(UserId);
                    userQuestion.Status = false;
                    userQuestion.IdQuestion = item.Id;
                    userQuestion.Number = Numbers;  Numbers++;  _context.Add(userQuestion);
                    _context.SaveChanges();
                }

                id_monhoc_10 = _context.Questions
                    .Include(x => x.TypeNavigation)
                    .Where(x => x.TypeNavigation.Domain == "id_monhoc_10")
                    .OrderBy(x => Guid.NewGuid())
                    .Take(11)
                    .ToList();
                foreach (var item in id_monhoc_10)
                {
                    userQuestion.Id = Guid.NewGuid();
                    userQuestion.IdUser = Guid.Parse(UserId);
                    userQuestion.Status = false;
                    userQuestion.IdQuestion = item.Id;
                    userQuestion.Number = Numbers;  Numbers++;  _context.Add(userQuestion);
                    _context.SaveChanges();
                }

                endTime = DateTime.Now.AddMinutes(24);
                timeString = "24:00";
                timer = new Timer(1000);
                timer.Elapsed += OnTimerElapsed;
                timer.Start();
            }


            user.Status = true;
            user.Score = 0;
            _context.Entry(user).Property(x => x.Status).IsModified = true;
            _context.Entry(user).Property(x => x.Score).IsModified = true;
            _context.SaveChanges();
            userQuestions = _context.UserQuestions.Include(x => x.IdQuestionNavigation).Where(x => x.IdUser == Guid.Parse(UserId)).OrderBy(x => x.Number).ToList();
            return;
        }
        else
        {
            shouldNavigate = true;
        }
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender && shouldNavigate)
        {
            try
            {
                NavigationManager.NavigateTo("/");
            }
            catch (Exception ex)
            {
                navigationError = $"Error during navigation: {ex.Message}";
            }
        }
    }
    public void ChangeImage(Guid Id)
    {
        var questions = _context.Questions.Include(x => x.TypeNavigation)
                            .FirstOrDefault(x => x.Id == Id);
        urlImage = "./img/" + questions.TypeNavigation.Domain + "/" + questions.Name + "";
        this.StateHasChanged();
    }

    private void OnRadioChange(int questionId, int selectedValue)
    {
        selectedAnswers[questionId] = selectedValue;
        StateHasChanged();
    }

    private void OnTimerElapsed(object sender, ElapsedEventArgs e)
    {
        var remainingTime = endTime - DateTime.Now;
        if (remainingTime.TotalSeconds <= 0)
        {
            timer.Stop();
            timeString = "00:00";
            showYesNoMessageBox1 = true;
        }
        else
        {
            timeString = remainingTime.ToString(@"mm\:ss");
        }

        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        timer?.Dispose();
    }

    private bool showYesNoMessageBox = false;
    private bool showYesNoMessageBox1 = false;
    private void HandleYesClick(bool result)
    {
        foreach (var item in userQuestions)
        {
            if (selectedAnswers.TryGetValue(item.Number, out int? selectedAnswer) && selectedAnswer.HasValue)
            {
                item.Reply = selectedAnswer.Value;
                if (selectedAnswer.Value == item.IdQuestionNavigation.Answers)
                {
                    item.Status = true;
                }
                _context.Update(item);
                _context.SaveChanges();
            }
        }

        user.Score = userQuestions.Where(x => x.IdUser == user.Id).Count(i => i.Status == true);
        _context.Update(user);
        _context.SaveChanges();

        showYesNoMessageBox = false;
        var allQuestions = user.UserQuestions
                        .FirstOrDefault(x => x.IdQuestionNavigation.TypeNavigation.Domain == "id_monhoc_02");
        bool allQuestionsValid = allQuestions.Status;
        if (user.Semester.Rank == "B11")
        {
            if (user.Score > 27 && allQuestionsValid == true)
            {
                user.Result = true;
            }
            else
            {
                user.Result = false;
            }
        }
        if (user.Semester.Rank == "B2")
        {
            if (user.Score > 32 && allQuestionsValid == true)
            {
                user.Result = true;
            }
            else
            {
                user.Result = false;
            }
        }
        if (user.Semester.Rank == "C")
        {
            if (user.Score > 36 && allQuestionsValid == true)
            {
                user.Result = true;
            }
            else
            {
                user.Result = false;
            }
        }
        _context.Update(user);
        _context.SaveChanges();
        
        showYesNoMessageBox2 = true;
        string result1 = "";
        if (user.Result == true)
        {
            result1 = "Đạt";

        }
        else
        {
            result1 = "Không đạt";
        }
        string score = "";
        if (user.Semester.Rank == "B11")
        {
            score = user.Score + "/30";
        }
        if (user.Semester.Rank == "B2")
        {
            score = user.Score + "/35";
        }
        if (user.Semester.Rank == "C")
        {
            score = user.Score + "/40";
        }
        Message = "Học viên: " + user.Name + " đạt được số điểm là: " + score + "\n Kết luận: " + result1;
    }
    private bool showYesNoMessageBox2 = false;
    private void HandleOkClick1()
    {
        NavigationManager.NavigateTo("/");
    }
    private void HandleOkClick()
    {
        foreach (var item in userQuestions)
        {
            if (selectedAnswers.TryGetValue(item.Number, out int? selectedAnswer) && selectedAnswer.HasValue)
            {
                item.Reply = selectedAnswer.Value;
                if (selectedAnswer.Value == item.IdQuestionNavigation.Answers)
                {
                    item.Status = true;
                }
                _context.Update(item);
                _context.SaveChanges();
            }
        }

        user.Score = userQuestions.Where(x => x.IdUser == user.Id).Count(i => i.Status == true);
        _context.Update(user);
        _context.SaveChanges();

        showYesNoMessageBox = false;
        var allQuestions = user.UserQuestions
                        .FirstOrDefault(x => x.IdQuestionNavigation.TypeNavigation.Domain == "id_monhoc_02");
        bool allQuestionsValid = allQuestions.Status;
        if (user.Semester.Rank == "B11")
        {
            if (user.Score > 27 && allQuestionsValid)
            {
                user.Result = true;
            }
            else
            {
                user.Result = false;
            }
        }
        if (user.Semester.Rank == "B2")
        {
            if (user.Score > 32 && allQuestionsValid)
            {
                user.Result = true;
            }
            else
            {
                user.Result = false;
            }
        }
        if (user.Semester.Rank == "C")
        {
            if (user.Score > 36 && allQuestionsValid)
            {
                user.Result = true;
            }
            else
            {
                user.Result = false;
            }
        }
        _context.Update(user);
        _context.SaveChanges();

        showYesNoMessageBox2 = true;
        string result = "";
        if (user.Result == true)
        {
            result = "Đạt";

        }
        else
        {
            result = "Không đạt";
        }
        string score = "";
        if (user.Semester.Rank == "B11")
        {
            score = user.Score + "/30";
        }
        if (user.Semester.Rank == "B2")
        {
            score = user.Score + "/35";
        }
        if (user.Semester.Rank == "C")
        {
            score = user.Score + "/40";
        }
        Message = "Học viên: " + user.Name + " đạt được số điểm là: " + score + "\n Kết luận: " + result;
    }
    private void HandleNoClick(bool result)
    {
        showYesNoMessageBox = false;
    }
    public void Submit()
    {
        showYesNoMessageBox = true;
    }
}
